name: CI

on:
  push:
    branches: 
      - dev
  pull_request:
    types: [opened, reopened, edited]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    services:
      dbtest:
        image: postgres            
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name dbtest 
        env:
          POSTGRES_PASSWORD: pumaadmin
          POSTGRES_USER: pumaadmin
          POSTGRES_DB: puma
          PGUSER: postgres
    env:
      DB_HOST: localhost
      DB_URL_TEST: postgres://pumaadmin:pumaadmin@localhost:5432/puma
      ENVIRONMENT: test

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 14.x
      uses: actions/setup-node@v3
      with:
        node-version: 14.x
        
    - name: check userService
      uses: actions/checkout@v3
      with:
        repository: fga-eps-mds/2022-2-PUMA-UserService
        path: 2022-2-PUMA-UserService
    
    - name: up containers 
      run: docker-compose -f test.actions.docker-compose.yaml up -d
      env:
        USER_PATH: 2022-2-PUMA-UserService 
        PROJECT_PATH: 2022-2-PUMA-ProjectService
        DB_URL_TEST: "postgres://pumaadmin:pumaadmin@localhost:5432/puma"
        DB_URL: "postgres://pumaadmin:pumaadmin@localhost:5432/puma"
        DB_USER: pumaadmin
        DB_PASS: pumaadmin
        DB: puma
        IP_ADDRESS: localhost
        SECRET: kronk
        DB_HOST: localhost

    - name: containers
      run: |
        docker container ps -a       

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
